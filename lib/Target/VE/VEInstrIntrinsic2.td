// Patterns for VE intrinsic

// For alomst of intrinsics, pattern is automatically generated by veintrin.py
// to VEInstrIntrinsic.td. But for some intrinsic, pattern is not automatically
// generated.

def : Pat<(v256f64 (INT_VLD i64:$sy, i64:$sz, VLS:$vl)), (VLDrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLD (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDU i64:$sy, i64:$sz, VLS:$vl)), (VLDUrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDU (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDUir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDLSX i64:$sy, i64:$sz, VLS:$vl)), (VLDLsxrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDLSX (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDLsxir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDLZX i64:$sy, i64:$sz, VLS:$vl)), (VLDLzxrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDLZX (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDLzxir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLD2D i64:$sy, i64:$sz, VLS:$vl)), (VLD2Drr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLD2D (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLD2Dir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDU2D i64:$sy, i64:$sz, VLS:$vl)), (VLDU2Drr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDU2D (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDU2Dir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDL2DSX i64:$sy, i64:$sz, VLS:$vl)), (VLDL2Dsxrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDL2DSX (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDL2Dsxir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDL2DZX i64:$sy, i64:$sz, VLS:$vl)), (VLDL2Dzxrr i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(v256f64 (INT_VLDL2DZX (i64 simm7:$I), i64:$sz, VLS:$vl)), (VLDL2Dzxir (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VST v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VSTrr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VST v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSTir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTU v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VSTUrr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTU v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSTUir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTL v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VSTLrr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTL v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSTLir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VST2D v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VST2Drr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VST2D v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VST2Dir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTU2D v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VSTU2Drr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTU2D v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSTU2Dir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTL2D v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl), (VSTL2Drr v256f64:$vx, i64:$sy, i64:$sz, VLS:$vl)>;
def : Pat<(INT_VSTL2D v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSTL2Dir v256f64:$vx, (i64 simm7:$I), i64:$sz, VLS:$vl)>;
def : Pat<(INT_PFCHV i64:$sy, i64:$sz, VLS:$vl), (PFCHVr i64:$sy, i64:$sz, $vl)>;
def : Pat<(INT_PFCHV (i64 simm7:$I), i64:$sz, VLS:$vl), (PFCHVi (i64 simm7:$I), i64:$sz, $vl)>;
def : Pat<(INT_LSV v256f64:$vx, i32:$sy, i64:$sz), (LSVr v256f64:$vx, i32:$sy, i64:$sz)>;
def : Pat<(i64 (INT_LVS v256f64:$vx, i32:$sy)), (LVSi64r v256f64:$vx, i32:$sy)>;
def : Pat<(f64 (INT_LVS v256f64:$vx, i32:$sy)), (LVSf64r v256f64:$vx, i32:$sy)>;
def : Pat<(f32 (INT_LVS v256f64:$vx, i32:$sy)), (LVSf32r v256f64:$vx, i32:$sy)>;
def : Pat<(INT_LVM v256i1:$vmd, i64:$sy, i64:$sz), (LVMr v256i1:$vmd, i64:$sy, i64:$sz)>;
def : Pat<(INT_LVM v256i1:$vmd, (i64 uimm6:$N), i64:$sz), (LVMi v256i1:$vmd, (i64 uimm6:$N), i64:$sz)>;
def : Pat<(INT_LVM v512i1:$vmd, (i64 uimm6:$N), i64:$sz), (LVMpi v512i1:$vmd, (i64 uimm6:$N), i64:$sz)>;
def : Pat<(INT_SVM v256i1:$vmz, i64:$sy), (SVMr v256i1:$vmz, i64:$sy)>;
def : Pat<(INT_SVM v256i1:$vmz, (i64 uimm6:$N)), (SVMi v256i1:$vmz, (i64 uimm6:$N))>;
def : Pat<(INT_SVM v512i1:$vmz, (i64 uimm6:$N)), (SVMpi v512i1:$vmz, (i64 uimm6:$N))>;
def : Pat<(v256f64 (INT_VBRD f64:$sy, VLS:$vl)), (VBRDf64r f64:$sy, VLS:$vl)>;
def : Pat<(v256f64 (INT_VBRD_M f64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDf64rm f64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VBRD i64:$sy, VLS:$vl)), (VBRDr i64:$sy, $vl)>;
def : Pat<(v256f64 (INT_VBRD_M i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDrm i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VBRD (i64 simm7:$I), VLS:$vl)), (VBRDi (i64 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VBRD_M (i64 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDim (i64 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VBRDU f32:$sy, VLS:$vl)), (VBRDf32r f32:$sy, $vl)>;
def : Pat<(v256f64 (INT_VBRDU_M f32:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDf32rm f32:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VBRDL i32:$sy, VLS:$vl)), (VBRDi32r i32:$sy, $vl)>;
def : Pat<(v256f64 (INT_VBRDL_M i32:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDi32rm i32:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VBRDL (i32 simm7:$I), VLS:$vl)), (VBRDi32i (i32 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VBRDL_M (i32 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDi32im (i32 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_PVBRD i64:$sy, VLS:$vl)), (VBRDpr i64:$sy, $vl)>;
def : Pat<(v256f64 (INT_PVBRD_M i64:$sy, v512i1:$vm, v256f64:$vd, VLS:$vl)), (VBRDprm i64:$sy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMV i32:$sy, v256f64:$vz, VLS:$vl), (VMVr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMV (i32 uimm7:$N), v256f64:$vz, VLS:$vl), (VMVi (i32 uimm7:$N), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUL v256f64:$vy, v256f64:$vz, VLS:$vl), (VADDlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUL i64:$sy, v256f64:$vz, VLS:$vl), (VADDlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VADDli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDUL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDUL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDUW v256f64:$vy, v256f64:$vz, VLS:$vl), (VADDwv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUW i32:$sy, v256f64:$vz, VLS:$vl), (VADDwr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUW (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VADDwi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDUW_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDwvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDUW_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDwrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDUW_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADDwim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVADDU v256f64:$vy, v256f64:$vz, VLS:$vl), (VADDpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVADDU i64:$sy, v256f64:$vz, VLS:$vl), (VADDpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVADDU_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VADDpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVADDU_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VADDprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VADSwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VADSwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VADSwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VADSwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VADSwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VADSwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADSwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVADDS v256f64:$vy, v256f64:$vz, VLS:$vl), (VADSpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVADDS i64:$sy, v256f64:$vz, VLS:$vl), (VADSpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVADDS_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VADSpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVADDS_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VADSprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VADXlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSL i64:$sy, v256f64:$vz, VLS:$vl), (VADXlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VADXli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VADDSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADXlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADXlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VADDSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VADXlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUL v256f64:$vy, v256f64:$vz, VLS:$vl), (VSUBlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUL i64:$sy, v256f64:$vz, VLS:$vl), (VSUBlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VSUBli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUW v256f64:$vy, v256f64:$vz, VLS:$vl), (VSUBwv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUW i32:$sy, v256f64:$vz, VLS:$vl), (VSUBwr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUW (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VSUBwi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBUW_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBwvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUW_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBwrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBUW_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSUBwim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSUBU v256f64:$vy, v256f64:$vz, VLS:$vl), (VSUBpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVSUBU i64:$sy, v256f64:$vz, VLS:$vl), (VSUBpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVSUBU_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSUBpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSUBU_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSUBprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VSBSwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VSBSwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VSBSwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VSBSwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VSBSwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VSBSwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBSwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSUBS v256f64:$vy, v256f64:$vz, VLS:$vl), (VSBSpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVSUBS i64:$sy, v256f64:$vz, VLS:$vl), (VSBSpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVSUBS_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSBSpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSUBS_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSBSprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VSBXlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSL i64:$sy, v256f64:$vz, VLS:$vl), (VSBXlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VSBXli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VSUBSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBXlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBXlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSUBSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSBXlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUL v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPYlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUL i64:$sy, v256f64:$vz, VLS:$vl), (VMPYlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VMPYli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUW v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPYwv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUW i32:$sy, v256f64:$vz, VLS:$vl), (VMPYwr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUW (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VMPYwi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMULUW_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYwvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUW_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYwrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULUW_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPYwim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPSwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VMPSwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VMPSwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPSwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VMPSwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VMPSwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPSwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPXlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSL i64:$sy, v256f64:$vz, VLS:$vl), (VMPXlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VMPXli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPXlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPXlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VMPXlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMULSLW v256f64:$vy, v256f64:$vz, VLS:$vl), (VMPDv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSLW i32:$sy, v256f64:$vz, VLS:$vl), (VMPDr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMULSLW (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VMPDi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL v256f64:$vy, v256f64:$vz, VLS:$vl)), (VDIVlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL i64:$sy, v256f64:$vz, VLS:$vl)), (VDIVlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL (i64 simm7:$I), v256f64:$vz, VLS:$vl)), (VDIVli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW v256f64:$vy, v256f64:$vz, VLS:$vl)), (VDIVwv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW i32:$sy, v256f64:$vz, VLS:$vl)), (VDIVwr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW (i32 simm7:$I), v256f64:$vz, VLS:$vl)), (VDIVwi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVwvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVwrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVwim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL v256f64:$vy, i64:$sy, VLS:$vl)), (VDIVlr2 v256f64:$vy, i64:$sy, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL v256f64:$vy, (i64 simm7:$I), VLS:$vl)), (VDIVli2 v256f64:$vy, (i64 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VDIVUL_M v256f64:$vy, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVlrm2 v256f64:$vy, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUL_M v256f64:$vy, (i64 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVlim2 v256f64:$vy, (i64 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW v256f64:$vy, i32:$sy, VLS:$vl)), (VDIVwr2 v256f64:$vy, i32:$sy, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW v256f64:$vy, (i32 simm7:$I), VLS:$vl)), (VDIVwi2 v256f64:$vy, (i32 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VDIVUW_M v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVwrm2 v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVUW_M v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDIVwim2 v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX v256f64:$vy, v256f64:$vz, VLS:$vl)), (VDVSwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX i32:$sy, v256f64:$vz, VLS:$vl)), (VDVSwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl)), (VDVSwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX v256f64:$vy, v256f64:$vz, VLS:$vl)), (VDVSwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX i32:$sy, v256f64:$vz, VLS:$vl)), (VDVSwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl)), (VDVSwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX v256f64:$vy, i32:$sy, VLS:$vl)), (VDVSwsxr2 v256f64:$vy, i32:$sy, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX v256f64:$vy, (i32 simm7:$I), VLS:$vl)), (VDVSwsxi2 v256f64:$vy, (i32 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX_M v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwsxrm2 v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWSX_M v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwsxim2 v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX v256f64:$vy, i32:$sy, VLS:$vl)), (VDVSwzxr2 v256f64:$vy, i32:$sy, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX v256f64:$vy, (i32 simm7:$I), VLS:$vl)), (VDVSwzxi2 v256f64:$vy, (i32 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX_M v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwzxrm2 v256f64:$vy, i32:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSWZX_M v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVSwzxim2 v256f64:$vy, (i32 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL v256f64:$vy, v256f64:$vz, VLS:$vl)), (VDVXlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL i64:$sy, v256f64:$vz, VLS:$vl)), (VDVXlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL (i64 simm7:$I), v256f64:$vz, VLS:$vl)), (VDVXli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVXlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVXlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVXlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL v256f64:$vy, i64:$sy, VLS:$vl)), (VDVXlr2 v256f64:$vy, i64:$sy, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL v256f64:$vy, (i64 simm7:$I), VLS:$vl)), (VDVXli2 v256f64:$vy, (i64 simm7:$I), $vl)>;
def : Pat<(v256f64 (INT_VDIVSL_M v256f64:$vy, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVXlrm2 v256f64:$vy, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VDIVSL_M v256f64:$vy, (i64 simm7:$I), v256i1:$vm, v256f64:$vd, VLS:$vl)), (VDVXlim2 v256f64:$vy, (i64 simm7:$I), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUL v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMPlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUL i64:$sy, v256f64:$vz, VLS:$vl), (VCMPlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VCMPli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUW v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMPwv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUW i32:$sy, v256f64:$vz, VLS:$vl), (VCMPwr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUW (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCMPwi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPUW_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPwvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUW_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPwrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPUW_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMPwim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCMPU v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMPpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVCMPU i64:$sy, v256f64:$vz, VLS:$vl), (VCMPpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVCMPU_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMPpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCMPU_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMPprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCPSwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VCPSwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCPSwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCPSwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VCPSwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCPSwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPSwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCMPS v256f64:$vy, v256f64:$vz, VLS:$vl), (VCPSpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVCMPS i64:$sy, v256f64:$vz, VLS:$vl), (VCPSpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVCMPS_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCPSpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCMPS_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCPSprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VCPXlv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSL i64:$sy, v256f64:$vz, VLS:$vl), (VCPXlr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VCPXli (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VCMPSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPXlvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPXlrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCMPSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPXlim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSawsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VCMSawsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCMSawsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSawzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VCMSawzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCMSawzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSawzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVMAXS v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSapv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVMAXS i64:$sy, v256f64:$vz, VLS:$vl), (VCMSapr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVMAXS_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMSapvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVMAXS_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMSaprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMXalv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSL i64:$sy, v256f64:$vz, VLS:$vl), (VCMXalr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VCMXali (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMAXSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXalvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXalrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMAXSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXalim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWSX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSiwsxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWSX i32:$sy, v256f64:$vz, VLS:$vl), (VCMSiwsxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWSX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCMSiwsxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWSX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwsxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWSX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwsxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWSX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwsxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWZX v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSiwzxv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWZX i32:$sy, v256f64:$vz, VLS:$vl), (VCMSiwzxr i32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWZX (i32 simm7:$I), v256f64:$vz, VLS:$vl), (VCMSiwzxi (i32 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSWZX_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwzxvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWZX_M i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwzxrm i32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSWZX_M (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiwzxim (i32 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVMINS v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMSipv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVMINS i64:$sy, v256f64:$vz, VLS:$vl), (VCMSipr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVMINS_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMSipvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVMINS_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VCMSiprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSL v256f64:$vy, v256f64:$vz, VLS:$vl), (VCMXilv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSL i64:$sy, v256f64:$vz, VLS:$vl), (VCMXilr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSL (i64 simm7:$I), v256f64:$vz, VLS:$vl), (VCMXili (i64 simm7:$I), v256f64:$vz, $vl)>;
def : Pat<(INT_VMINSL_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXilvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSL_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXilrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VMINSL_M (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCMXilim (i64 simm7:$I), v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VAND v256f64:$vy, v256f64:$vz, VLS:$vl), (VANDv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VAND i64:$sy, v256f64:$vz, VLS:$vl), (VANDr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VAND_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VANDvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VAND_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VANDrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVAND v256f64:$vy, v256f64:$vz, VLS:$vl), (VANDpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVAND i64:$sy, v256f64:$vz, VLS:$vl), (VANDpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVAND_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VANDpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVAND_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VANDprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VOR v256f64:$vy, v256f64:$vz, VLS:$vl), (VORv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VOR i64:$sy, v256f64:$vz, VLS:$vl), (VORr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VOR_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VORvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VOR_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VORrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVOR v256f64:$vy, v256f64:$vz, VLS:$vl), (VORpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVOR i64:$sy, v256f64:$vz, VLS:$vl), (VORpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVOR_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VORpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVOR_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VORprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VXOR v256f64:$vy, v256f64:$vz, VLS:$vl), (VXORv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VXOR i64:$sy, v256f64:$vz, VLS:$vl), (VXORr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VXOR_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VXORvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VXOR_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VXORrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVXOR v256f64:$vy, v256f64:$vz, VLS:$vl), (VXORpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVXOR i64:$sy, v256f64:$vz, VLS:$vl), (VXORpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVXOR_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VXORpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVXOR_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VXORprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VEQV v256f64:$vy, v256f64:$vz, VLS:$vl), (VEQVv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VEQV i64:$sy, v256f64:$vz, VLS:$vl), (VEQVr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VEQV_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VEQVvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VEQV_M i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VEQVrm i64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVEQV v256f64:$vy, v256f64:$vz, VLS:$vl), (VEQVpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVEQV i64:$sy, v256f64:$vz, VLS:$vl), (VEQVpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVEQV_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VEQVpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVEQV_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VEQVprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(v256f64 (INT_VSEQ VLS:$vl)), (VSEQv $vl)>;
def : Pat<(v256f64 (INT_PVSEQLO VLS:$vl)), (VSEQlv $vl)>;
def : Pat<(v256f64 (INT_PVSEQUP VLS:$vl)), (VSEQuv $vl)>;
def : Pat<(v256f64 (INT_PVSEQ VLS:$vl)), (VSEQpv $vl)>;
def : Pat<(INT_VSLL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSLLv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSLL v256f64:$vz, i64:$sy, VLS:$vl), (VSLLr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSLL v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSLLi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSLL_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLLvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLL_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLLrm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLL_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLLim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSLL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSLLpv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_PVSLL v256f64:$vz, i64:$sy, VLS:$vl), (VSLLpr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_PVSLL_M v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSLLpvm v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSLL_M v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSLLprm2 v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSRLv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSRL v256f64:$vz, i64:$sy, VLS:$vl), (VSRLr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSRL v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSRLi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSRL_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRLvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRL_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRLrm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRL_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRLim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSRL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSRLpv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_PVSRL v256f64:$vz, i64:$sy, VLS:$vl), (VSRLpr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_PVSRL_M v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSRLpvm v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSRL_M v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSRLprm2 v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAW v256f64:$vz, v256f64:$vy, VLS:$vl), (VSLAv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSLAW v256f64:$vz, i64:$sy, VLS:$vl), (VSLAr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSLAW v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSLAi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSLAW_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLAvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAW_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLArm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAW_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLAim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSLA v256f64:$vz, v256f64:$vy, VLS:$vl), (VSLApv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_PVSLA v256f64:$vz, i64:$sy, VLS:$vl), (VSLApr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_PVSLA_M v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSLApvm v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSLA_M v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSLAprm2 v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSLAXv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSLAL v256f64:$vz, i64:$sy, VLS:$vl), (VSLAXr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSLAL v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSLAXi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSLAL_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLAXvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAL_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLAXrm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSLAL_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSLAXim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAW v256f64:$vz, v256f64:$vy, VLS:$vl), (VSRAv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSRAW v256f64:$vz, i64:$sy, VLS:$vl), (VSRAr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSRAW v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSRAi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSRAW_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRAvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAW_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRArm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAW_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRAim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSRA v256f64:$vz, v256f64:$vy, VLS:$vl), (VSRApv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_PVSRA v256f64:$vz, i64:$sy, VLS:$vl), (VSRApr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_PVSRA_M v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSRApvm v256f64:$vz, v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVSRA_M v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VSRAprm2 v256f64:$vz, i64:$sy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAL v256f64:$vz, v256f64:$vy, VLS:$vl), (VSRAXv v256f64:$vz, v256f64:$vy, $vl)>;
def : Pat<(INT_VSRAL v256f64:$vz, i64:$sy, VLS:$vl), (VSRAXr2 v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSRAL v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSRAXi2 v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VSRAL_M v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRAXvm v256f64:$vz, v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAL_M v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRAXrm2 v256f64:$vz, i64:$sy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSRAL_M v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, VLS:$vl), (VSRAXim2 v256f64:$vz, (i64 uimm6:$N), v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSFA v256f64:$vz, i64:$sy, i64:$sz, VLS:$vl), (VSFAr2 v256f64:$vz, i64:$sy, i64:$sz, $vl)>;
def : Pat<(INT_VSFA v256f64:$vz, (i64 simm7:$I), i64:$sz, VLS:$vl), (VSFAi2 v256f64:$vz, (i64 simm7:$I), i64:$sz, $vl)>;
def : Pat<(INT_VSFA_M v256f64:$vz, i64:$sy, i64:$sz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSFArm2 v256f64:$vz, i64:$sy, i64:$sz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VSFA_M v256f64:$vz, (i64 simm7:$I), i64:$sz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VSFAim2 v256f64:$vz, (i64 simm7:$I), i64:$sz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFADDD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFADdv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFADDD f64:$sy, v256f64:$vz, VLS:$vl), (VFADdr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFADDD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFADdvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFADDD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFADdrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFADDS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFADsv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFADDS f32:$sy, v256f64:$vz, VLS:$vl), (VFADsr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFADDS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFADsvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFADDS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFADsrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFADD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFADpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFADD i64:$sy, v256f64:$vz, VLS:$vl), (VFADpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFADD_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFADpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFADD_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFADprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFSUBD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFSBdv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFSUBD f64:$sy, v256f64:$vz, VLS:$vl), (VFSBdr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFSUBD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFSBdvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFSUBD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFSBdrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFSUBS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFSBsv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFSUBS f32:$sy, v256f64:$vz, VLS:$vl), (VFSBsr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFSUBS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFSBsvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFSUBS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFSBsrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFSUB v256f64:$vy, v256f64:$vz, VLS:$vl), (VFSBpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFSUB i64:$sy, v256f64:$vz, VLS:$vl), (VFSBpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFSUB_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFSBpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFSUB_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFSBprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMULD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFMPdv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMULD f64:$sy, v256f64:$vz, VLS:$vl), (VFMPdr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMULD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMPdvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMULD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMPdrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMULS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFMPsv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMULS f32:$sy, v256f64:$vz, VLS:$vl), (VFMPsr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMULS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMPsvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMULS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMPsrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMUL v256f64:$vy, v256f64:$vz, VLS:$vl), (VFMPpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMUL i64:$sy, v256f64:$vz, VLS:$vl), (VFMPpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMUL_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMPpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMUL_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMPprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFDIVD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFDVdv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFDIVD f64:$sy, v256f64:$vz, VLS:$vl), (VFDVdr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFDIVD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFDVdvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFDIVD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFDVdrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFDIVS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFDVsv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFDIVS f32:$sy, v256f64:$vz, VLS:$vl), (VFDVsr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFDIVS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFDVsvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFDIVS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFDVsrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFSQRTD v256f64:$vy, VLS:$vl), (VFSQRTdv v256f64:$vy, $vl)>;
def : Pat<(INT_VFSQRTS v256f64:$vy, VLS:$vl), (VFSQRTsv v256f64:$vy, $vl)>;
def : Pat<(INT_VFCMPD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCPdv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFCMPD f64:$sy, v256f64:$vz, VLS:$vl), (VFCPdr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFCMPD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCPdvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFCMPD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCPdrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFCMPS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCPsv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFCMPS f32:$sy, v256f64:$vz, VLS:$vl), (VFCPsr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFCMPS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCPsvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFCMPS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCPsrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFCMP v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCPpv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFCMP i64:$sy, v256f64:$vz, VLS:$vl), (VFCPpr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFCMP_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCPpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFCMP_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCPprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMAXD v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMadv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMAXD f64:$sy, v256f64:$vz, VLS:$vl), (VFCMadr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMAXD_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMadvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMAXD_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMadrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMAXS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMasv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMAXS f32:$sy, v256f64:$vz, VLS:$vl), (VFCMasr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMAXS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMasvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMAXS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMasrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMAX v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMapv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMAX i64:$sy, v256f64:$vz, VLS:$vl), (VFCMapr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMAX_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCMapvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMAX_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCMaprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMIND v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMidv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMIND f64:$sy, v256f64:$vz, VLS:$vl), (VFCMidr f64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMIND_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMidvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMIND_M f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMidrm f64:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMINS v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMisv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMINS f32:$sy, v256f64:$vz, VLS:$vl), (VFCMisr f32:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_VFMINS_M v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMisvm v256f64:$vy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMINS_M f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFCMisrm f32:$sy, v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMIN v256f64:$vy, v256f64:$vz, VLS:$vl), (VFCMipv v256f64:$vy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMIN i64:$sy, v256f64:$vz, VLS:$vl), (VFCMipr i64:$sy, v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMIN_M v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCMipvm v256f64:$vy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMIN_M i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFCMiprm i64:$sy, v256f64:$vz, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADdv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADD f64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADdr f64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADD v256f64:$vy, f64:$sy, v256f64:$vw, VLS:$vl), (VFMADdr2 v256f64:$vy, f64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADdvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADD_M f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADdrm f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADD_M v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADdr2m v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADS v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADsv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADS f32:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADsr f32:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADS v256f64:$vy, f32:$sy, v256f64:$vw, VLS:$vl), (VFMADsr2 v256f64:$vy, f32:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMADS_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADsvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADS_M f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADsrm f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMADS_M v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMADsr2m v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMAD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADpv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMAD i64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMADpr i64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMAD v256f64:$vy, i64:$sy, v256f64:$vw, VLS:$vl), (VFMADpr2 v256f64:$vy, i64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMAD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMADpvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMAD_M i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMADprm i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMAD_M v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMADpr2m v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBdv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBD f64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBdr f64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBD v256f64:$vy, f64:$sy, v256f64:$vw, VLS:$vl), (VFMSBdr2 v256f64:$vy, f64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBdvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBD_M f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBdrm f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBD_M v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBdr2m v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBS v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBsv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBS f32:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBsr f32:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBS v256f64:$vy, f32:$sy, v256f64:$vw, VLS:$vl), (VFMSBsr2 v256f64:$vy, f32:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFMSBS_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBsvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBS_M f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBsrm f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMSBS_M v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBsr2m v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMSB v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBpv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMSB i64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFMSBpr i64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMSB v256f64:$vy, i64:$sy, v256f64:$vw, VLS:$vl), (VFMSBpr2 v256f64:$vy, i64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFMSB_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBpvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMSB_M i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBprm i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFMSB_M v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFMSBpr2m v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADdv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADD f64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADdr f64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADD v256f64:$vy, f64:$sy, v256f64:$vw, VLS:$vl), (VFNMADdr2 v256f64:$vy, f64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADdvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADD_M f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADdrm f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADD_M v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADdr2m v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADS v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADsv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADS f32:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADsr f32:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADS v256f64:$vy, f32:$sy, v256f64:$vw, VLS:$vl), (VFNMADsr2 v256f64:$vy, f32:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMADS_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADsvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADS_M f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADsrm f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMADS_M v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADsr2m v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMAD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADpv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMAD i64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMADpr i64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMAD v256f64:$vy, i64:$sy, v256f64:$vw, VLS:$vl), (VFNMADpr2 v256f64:$vy, i64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMAD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADpvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMAD_M i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADprm i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMAD_M v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMADpr2m v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBD v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBdv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBD f64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBdr f64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBD v256f64:$vy, f64:$sy, v256f64:$vw, VLS:$vl), (VFNMSBdr2 v256f64:$vy, f64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBD_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBdvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBD_M f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBdrm f64:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBD_M v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBdr2m v256f64:$vy, f64:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBS v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBsv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBS f32:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBsr f32:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBS v256f64:$vy, f32:$sy, v256f64:$vw, VLS:$vl), (VFNMSBsr2 v256f64:$vy, f32:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_VFNMSBS_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBsvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBS_M f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBsrm f32:$sy, v256f64:$vz, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFNMSBS_M v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBsr2m v256f64:$vy, f32:$sy, v256f64:$vw, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMSB v256f64:$vy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBpv v256f64:$vy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMSB i64:$sy, v256f64:$vz, v256f64:$vw, VLS:$vl), (VFNMSBpr i64:$sy, v256f64:$vz, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMSB v256f64:$vy, i64:$sy, v256f64:$vw, VLS:$vl), (VFNMSBpr2 v256f64:$vy, i64:$sy, v256f64:$vw, $vl)>;
def : Pat<(INT_PVFNMSB_M v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBpvm v256f64:$vy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMSB_M i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBprm i64:$sy, v256f64:$vz, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVFNMSB_M v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFNMSBpr2m v256f64:$vy, i64:$sy, v256f64:$vw, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VRCPD v256f64:$vy, VLS:$vl), (VRCPdv v256f64:$vy, $vl)>;
def : Pat<(INT_VRCPS v256f64:$vy, VLS:$vl), (VRCPsv v256f64:$vy, $vl)>;
def : Pat<(INT_PVRCP v256f64:$vy, VLS:$vl), (VRCPpv v256f64:$vy, $vl)>;
def : Pat<(INT_VRSQRTD v256f64:$vy, VLS:$vl), (VRSQRTdv v256f64:$vy, $vl)>;
def : Pat<(INT_VRSQRTS v256f64:$vy, VLS:$vl), (VRSQRTsv v256f64:$vy, $vl)>;
def : Pat<(INT_PVRSQRT v256f64:$vy, VLS:$vl), (VRSQRTpv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWDSX v256f64:$vy, VLS:$vl), (VFIXdsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWDSX_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXdsxvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWDSXRZ v256f64:$vy, VLS:$vl), (VFIXdsxrzv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWDSXRZ_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXdsxrzvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWDZX v256f64:$vy, VLS:$vl), (VFIXdzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWDZX_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXdzxvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWDZXRZ v256f64:$vy, VLS:$vl), (VFIXdzxrzv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWDZXRZ_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXdzxrzvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWSSX v256f64:$vy, VLS:$vl), (VFIXssxv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWSSX_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXssxvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWSSXRZ v256f64:$vy, VLS:$vl), (VFIXssxrzv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWSSXRZ_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXssxrzvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWSZX v256f64:$vy, VLS:$vl), (VFIXszxv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWSZX_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXszxvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTWSZXRZ v256f64:$vy, VLS:$vl), (VFIXszxrzv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTWSZXRZ_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXszxrzvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCVTWS v256f64:$vy, VLS:$vl), (VFIXpv v256f64:$vy, $vl)>;
def : Pat<(INT_PVCVTWS_M v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFIXpvm v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_PVCVTWSRZ v256f64:$vy, VLS:$vl), (VFIXprzv v256f64:$vy, $vl)>;
def : Pat<(INT_PVCVTWSRZ_M v256f64:$vy, v512i1:$vm, v256f64:$vd, VLS:$vl), (VFIXprzvm v256f64:$vy, v512i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTLD v256f64:$vy, VLS:$vl), (VFIXXv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTLD_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXXvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTLDRZ v256f64:$vy, VLS:$vl), (VFIXXrzv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTLDRZ_M v256f64:$vy, v256i1:$vm, v256f64:$vd, VLS:$vl), (VFIXXrzvm v256f64:$vy, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VCVTDW v256f64:$vy, VLS:$vl), (VFLTdv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTSW v256f64:$vy, VLS:$vl), (VFLTsv v256f64:$vy, $vl)>;
def : Pat<(INT_PVCVTSW v256f64:$vy, VLS:$vl), (VFLTpv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTDL v256f64:$vy, VLS:$vl), (VFLTXv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTDS v256f64:$vy, VLS:$vl), (VCVDv v256f64:$vy, $vl)>;
def : Pat<(INT_VCVTSD v256f64:$vy, VLS:$vl), (VCVSv v256f64:$vy, $vl)>;
def : Pat<(INT_VMRG_M v256f64:$vy, v256f64:$vz, v256i1:$vm, VLS:$vl), (VMRGvm v256f64:$vy, v256f64:$vz, v256i1:$vm, $vl)>;
def : Pat<(INT_VMRGW_M v256f64:$vy, v256f64:$vz, v512i1:$vm, VLS:$vl), (VMRGpvm v256f64:$vy, v256f64:$vz, v512i1:$vm, $vl)>;
def : Pat<(INT_VSHF v256f64:$vy, v256f64:$vz, i64:$sy, VLS:$vl), (VSHFr v256f64:$vy, v256f64:$vz, i64:$sy, $vl)>;
def : Pat<(INT_VSHF v256f64:$vy, v256f64:$vz, (i64 uimm6:$N), VLS:$vl), (VSHFi v256f64:$vy, v256f64:$vz, (i64 uimm6:$N), $vl)>;
def : Pat<(INT_VCP_M v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VCPvm v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VEX_M v256f64:$vz, v256i1:$vm, v256f64:$vd, VLS:$vl), (VEXvm v256f64:$vz, v256i1:$vm, v256f64:$vd, $vl)>;
def : Pat<(INT_VFMKL (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMKv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_VFMKL_M (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, VLS:$vl), (VFMKvm (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, $vl)>;
def : Pat<(INT_VFMKAT VLS:$vl), (VFMKat $vl)>;
def : Pat<(INT_VFMKAF VLS:$vl), (VFMKaf $vl)>;
def : Pat<(INT_PVFMKAT VLS:$vl), (VFMKpat $vl)>;
def : Pat<(INT_PVFMKAF VLS:$vl), (VFMKpaf $vl)>;
def : Pat<(INT_VFMKW (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMSv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_VFMKW_M (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, VLS:$vl), (VFMSvm (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, $vl)>;
def : Pat<(INT_PVFMKW (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMSpv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMKW_M (i32 uimm6:$cc), v256f64:$vz, v512i1:$vm, VLS:$vl), (VFMSpvm (i32 uimm6:$cc), v256f64:$vz, v512i1:$vm, $vl)>;
def : Pat<(INT_VFMKD (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMFdv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_VFMKD_M (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, VLS:$vl), (VFMFdvm (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, $vl)>;
def : Pat<(INT_VFMKS (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMFsv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_VFMKS_M (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, VLS:$vl), (VFMFsvm (i32 uimm6:$cc), v256f64:$vz, v256i1:$vm, $vl)>;
def : Pat<(INT_PVFMKS (i32 uimm6:$cc), v256f64:$vz, VLS:$vl), (VFMFpv (i32 uimm6:$cc), v256f64:$vz, $vl)>;
def : Pat<(INT_PVFMKS_M (i32 uimm6:$cc), v256f64:$vz, v512i1:$vm, VLS:$vl), (VFMFpvm (i32 uimm6:$cc), v256f64:$vz, v512i1:$vm, $vl)>;
def : Pat<(INT_VSUMWSX v256f64:$vy, VLS:$vl), (VSUMSsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VSUMWSX_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VSUMSsxvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VSUMWZX v256f64:$vy, VLS:$vl), (VSUMSzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VSUMWZX_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VSUMSzxvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VSUML v256f64:$vy, VLS:$vl), (VSUMXv v256f64:$vy, $vl)>;
def : Pat<(INT_VSUML_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VSUMXvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VFSUMD v256f64:$vy, VLS:$vl), (VFSUMdv v256f64:$vy, $vl)>;
def : Pat<(INT_VFSUMD_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VFSUMdvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VFSUMS v256f64:$vy, VLS:$vl), (VFSUMsv v256f64:$vy, $vl)>;
def : Pat<(INT_VFSUMS_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VFSUMsvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VRMAXSWFSTSX v256f64:$vy, VLS:$vl), (VMAXSafsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMAXSWLSTSX v256f64:$vy, VLS:$vl), (VMAXSalsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMAXSWFSTZX v256f64:$vy, VLS:$vl), (VMAXSafzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMAXSWLSTZX v256f64:$vy, VLS:$vl), (VMAXSalzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSWFSTSX v256f64:$vy, VLS:$vl), (VMAXSifsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSWLSTSX v256f64:$vy, VLS:$vl), (VMAXSilsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSWFSTZX v256f64:$vy, VLS:$vl), (VMAXSifzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSWLSTZX v256f64:$vy, VLS:$vl), (VMAXSilzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMAXSLFST v256f64:$vy, VLS:$vl), (VMAXXafv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMAXSLLST v256f64:$vy, VLS:$vl), (VMAXXalv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSLFST v256f64:$vy, VLS:$vl), (VMAXXifv v256f64:$vy, $vl)>;
def : Pat<(INT_VRMINSLLST v256f64:$vy, VLS:$vl), (VMAXXilv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMAXDFST v256f64:$vy, VLS:$vl), (VFMAXadfv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMAXDLST v256f64:$vy, VLS:$vl), (VFMAXadlv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMAXSFST v256f64:$vy, VLS:$vl), (VFMAXasfv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMAXSLST v256f64:$vy, VLS:$vl), (VFMAXaslv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMINDFST v256f64:$vy, VLS:$vl), (VFMAXidfv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMINDLST v256f64:$vy, VLS:$vl), (VFMAXidlv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMINSFST v256f64:$vy, VLS:$vl), (VFMAXisfv v256f64:$vy, $vl)>;
def : Pat<(INT_VFRMINSLST v256f64:$vy, VLS:$vl), (VFMAXislv v256f64:$vy, $vl)>;
def : Pat<(INT_VGT v256f64:$vy, VLS:$vl), (VGTv v256f64:$vy, $vl)>;
def : Pat<(INT_VGT_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VGTvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VGTU v256f64:$vy, VLS:$vl), (VGTUv v256f64:$vy, $vl)>;
def : Pat<(INT_VGTU_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VGTUvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VGTLSX v256f64:$vy, VLS:$vl), (VGTLsxv v256f64:$vy, $vl)>;
def : Pat<(INT_VGTLSX_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VGTLsxvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VGTLZX v256f64:$vy, VLS:$vl), (VGTLzxv v256f64:$vy, $vl)>;
def : Pat<(INT_VGTLZX_M v256f64:$vy, v256i1:$vm, VLS:$vl), (VGTLzxvm v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VSC v256f64:$vx, v256f64:$vy, VLS:$vl), (VSCv v256f64:$vx, v256f64:$vy, $vl)>;
def : Pat<(INT_VSC_M v256f64:$vx, v256f64:$vy, v256i1:$vm, VLS:$vl), (VSCvm v256f64:$vx, v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VSCU v256f64:$vx, v256f64:$vy, VLS:$vl), (VSCUv v256f64:$vx, v256f64:$vy, $vl)>;
def : Pat<(INT_VSCU_M v256f64:$vx, v256f64:$vy, v256i1:$vm, VLS:$vl), (VSCUvm v256f64:$vx, v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_VSCL v256f64:$vx, v256f64:$vy, VLS:$vl), (VSCLv v256f64:$vx, v256f64:$vy, $vl)>;
def : Pat<(INT_VSCL_M v256f64:$vx, v256f64:$vy, v256i1:$vm, VLS:$vl), (VSCLvm v256f64:$vx, v256f64:$vy, v256i1:$vm, $vl)>;
def : Pat<(INT_ANDM v256i1:$vmy, v256i1:$vmz), (ANDM v256i1:$vmy, v256i1:$vmz)>;
def : Pat<(INT_ANDM v512i1:$vmy, v512i1:$vmz), (ANDMp v512i1:$vmy, v512i1:$vmz)>;
def : Pat<(INT_ORM v256i1:$vmy, v256i1:$vmz), (ORM v256i1:$vmy, v256i1:$vmz)>;
def : Pat<(INT_ORM v512i1:$vmy, v512i1:$vmz), (ORMp v512i1:$vmy, v512i1:$vmz)>;
def : Pat<(INT_XORM v256i1:$vmy, v256i1:$vmz), (XORM v256i1:$vmy, v256i1:$vmz)>;
def : Pat<(INT_XORM v512i1:$vmy, v512i1:$vmz), (XORMp v512i1:$vmy, v512i1:$vmz)>;
def : Pat<(INT_EQVM v256i1:$vmy, v256i1:$vmz), (EQVM v256i1:$vmy, v256i1:$vmz)>;
def : Pat<(INT_EQVM v512i1:$vmy, v512i1:$vmz), (EQVMp v512i1:$vmy, v512i1:$vmz)>;
def : Pat<(INT_NNDM v256i1:$vmy, v256i1:$vmz), (NNDM v256i1:$vmy, v256i1:$vmz)>;
def : Pat<(INT_NNDM v512i1:$vmy, v512i1:$vmz), (NNDMp v512i1:$vmy, v512i1:$vmz)>;
def : Pat<(INT_NEGM v256i1:$vmy), (NEGM v256i1:$vmy)>;
def : Pat<(INT_NEGM v512i1:$vmy), (NEGMp v512i1:$vmy)>;
def : Pat<(INT_PCVM v256i1:$vmy, VLS:$vl), (PCVM v256i1:$vmy, $vl)>;
def : Pat<(INT_LZVM v256i1:$vmy, VLS:$vl), (LZVM v256i1:$vmy, $vl)>;
def : Pat<(INT_TOVM v256i1:$vmy, VLS:$vl), (TOVM v256i1:$vmy, $vl)>;

// Pattern Matchings for VE Intrinsics

def : Pat<(INT_LVL i32:$sy), (LVL i32:$sy)>;
def : Pat<(int_ve_svob), (SVOB)>;

def : Pat<(i64 (int_ve_pack_f32p ADDRri:$addr0, ADDRri:$addr1)),
          (ORrr (INSERT_SUBREG (i64 (IMPLICIT_DEF)),
                               (LDUri MEMri:$addr0), sub_f32),
                (INSERT_SUBREG (i64 (IMPLICIT_DEF)),
                               (LDLUri MEMri:$addr1), sub_i32))>;

def : Pat<(i64 (int_ve_pack_f32a ADDRri:$addr)),
          (i64 (MPYrr
            (INSERT_SUBREG (i64 (IMPLICIT_DEF)), (LDLUri MEMri:$addr), sub_i32),
            (LEASLrzi (ANDrm0 (LEAzzi (LO32 (i64 0x0000000100000001))), 32),
                      (HI32 (i64 0x0000000100000001)))))>;

def : Pat<(v256i1 (INT_EXTMU v512i1:$vm)),
          (v256i1 (EXTRACT_SUBREG v512i1:$vm, sub_vm_even))>;

def : Pat<(v256i1 (INT_EXTML v512i1:$vm)),
          (v256i1 (EXTRACT_SUBREG v512i1:$vm, sub_vm_odd))>;

def : Pat<(v512i1 (INT_INSMU v512i1:$vmx, v256i1:$vmy)),
          (v512i1 (INSERT_SUBREG v512i1:$vmx, v256i1:$vmy, sub_vm_even))>;

def : Pat<(v512i1 (INT_INSML v512i1:$vmx, v256i1:$vmy)),
          (v512i1 (INSERT_SUBREG v512i1:$vmx, v256i1:$vmy, sub_vm_odd))>;
